<match fluent.**>
  @type null
</match>

<source>
  @type tail
  path /var/log/containers/*.log
  pos_file /var/log/fluentd-containers.log.pos
  time_format %Y-%m-%dT%H:%M:%S.%NZ
  tag kubernetes.*
  format json
  read_from_head true
</source>

<source>
  @type systemd
  filters [{ "_SYSTEMD_UNIT": "flannel.service" }]
  pos_file /var/log/fluentd-journald-flannel.pos
  read_from_head true
  tag core.flannel
</source>

<source>
  @type systemd
  filters [{ "_SYSTEMD_UNIT": "calico.service" }]
  pos_file /var/log/fluentd-journald-calico.pos
  read_from_head true
  tag core.calico
</source>

<source>
  @type systemd
  filters [{ "_SYSTEMD_UNIT": "apiserver.service" }]
  pos_file /var/log/fluentd-journald-apiserver.pos
  read_from_head true
  tag core.apiserver
</source>

<source>
  @type systemd
  filters [{ "_SYSTEMD_UNIT": "kubelet.service" }]
  pos_file /var/log/fluentd-journald-kubelet.pos
  read_from_head true
  tag core.kubelet
</source>

<source>
  @type systemd
  filters [{ "_SYSTEMD_UNIT": "controllermanager.service" }]
  pos_file /var/log/fluentd-journald-controllermanager.pos
  read_from_head true
  tag core.controllermanager
</source>

<source>
  @type systemd
  filters [{ "_SYSTEMD_UNIT": "scheduler.service" }]
  pos_file /var/log/fluentd-journald-scheduler.pos
  read_from_head true
  tag core.scheduler
</source>

<source>
  @type systemd
  filters [{ "_SYSTEMD_UNIT": "kubeproxy.service" }]
  pos_file /var/log/fluentd-journald-kubeproxy.pos
  read_from_head true
  tag core.kubeproxy
</source>

<filter kubernetes.**>
  @type kubernetes_metadata
</filter>

<filter core.**>
  @type record_transformer
  renew_record
  enable_ruby
  <record>
    tag       ${tag}
    node      "#{ENV['NODE_ID']}"
    message   ${record["MESSAGE"]}
  </record>
</filter>

<filter kubernetes.**>
  @type record_transformer
  renew_record
  enable_ruby
  <record>
    tag       ${record["kubernetes"]["namespace_name"]}.${record["kubernetes"]["pod_name"]}
    node      "#{ENV['NODE_ID']}"
    pod       ${record["kubernetes"]["pod_name"]}
    namespace ${record["kubernetes"]["namespace_name"]}
    container ${record["kubernetes"]["container_name"]}
    message   ${record["log"]}
  </record>
</filter>

<match **>
  @type cloudwatch_logs
  log_group_name "#{ENV['LOG_GROUP_NAME']}"
  auto_create_stream true
  log_stream_name_key tag
</match>
